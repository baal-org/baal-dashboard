[[package]]
name = "aiohttp"
version = "3.8.4"
description = "Async http client/server framework (asyncio)"
category = "dev"
optional = true
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<4.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aiosignal"
version = "1.3.1"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "anyio"
version = "3.6.2"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
doc = ["packaging", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
trio = ["trio (>=0.16,<0.22)"]

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "dev"
optional = true
python-versions = ">=3.6"

[[package]]
name = "attrs"
version = "22.2.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = true
python-versions = ">=3.6"

[package.extras]
cov = ["attrs", "coverage-enable-subprocess", "coverage[toml] (>=5.3)"]
dev = ["attrs"]
docs = ["furo", "sphinx", "myst-parser", "zope.interface", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier"]
tests = ["attrs", "zope.interface"]
tests-no-zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]
tests_no_zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]

[[package]]
name = "baal"
version = "1.8.0"
description = "Library to enable Bayesian active learning in your research or labeling work."
category = "dev"
optional = true
python-versions = ">=3.8,<4"

[package.dependencies]
h5py = ">=3.4.0,<4.0.0"
lightning-flash = {version = ">=0.7.5", optional = true, markers = "extra == \"vision\""}
matplotlib = ">=3.4.3,<4.0.0"
numpy = ">=1.21.2,<2.0.0"
Pillow = ">=6.2.0"
scikit-learn = ">=1.0.0,<2.0.0"
scipy = ">=1.7.1,<2.0.0"
structlog = ">=21.1.0,<22.0.0"
torch = ">=1.6.0"
torchmetrics = ">=0.9.3,<0.10.0"
torchvision = {version = ">=0.7.0", optional = true, markers = "extra == \"vision\""}
tqdm = ">=4.62.2,<5.0.0"

[package.extras]
vision = ["torchvision (>=0.7.0)", "lightning-flash (>=0.7.5)"]
nlp = ["transformers (>=4.10.2)", "datasets (>=1.11.0)"]

[[package]]
name = "black"
version = "22.12.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "certifi"
version = "2022.12.7"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "3.0.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "cloudpickle"
version = "2.2.1"
description = "Extended pickling support for Python objects"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "contourpy"
version = "1.0.7"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "dev"
optional = true
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.16"

[package.extras]
bokeh = ["bokeh", "chromedriver", "selenium"]
docs = ["furo", "sphinx-copybutton"]
mypy = ["contourpy", "docutils-stubs", "mypy (==0.991)", "types-pillow"]
test = ["matplotlib", "pillow", "pytest"]
test-no-images = ["pytest"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "dev"
optional = true
python-versions = ">=3.6"

[[package]]
name = "databricks-cli"
version = "0.17.4"
description = "A command line interface for Databricks"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = ">=7.0"
oauthlib = ">=3.1.0"
pyjwt = ">=1.7.0"
requests = ">=2.17.3"
six = ">=1.10.0"
tabulate = ">=0.7.7"

[[package]]
name = "distlib"
version = "0.3.6"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "docstring-parser"
version = "0.15"
description = "Parse Python docstrings in reST, Google and Numpydoc format"
category = "dev"
optional = true
python-versions = ">=3.6,<4.0"

[[package]]
name = "entrypoints"
version = "0.4"
description = "Discover and load entry points from installed packages."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "fastapi"
version = "0.89.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pydantic = ">=1.6.2,<1.7 || >1.7,<1.7.1 || >1.7.1,<1.7.2 || >1.7.2,<1.7.3 || >1.7.3,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0"
starlette = "0.22.0"

[package.extras]
all = ["email-validator (>=1.1.1)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=2.11.2)", "orjson (>=3.2.1)", "python-multipart (>=0.0.5)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
dev = ["pre-commit (>=2.17.0,<3.0.0)", "ruff (==0.0.138)", "uvicorn[standard] (>=0.12.0,<0.21.0)"]
doc = ["mdx-include (>=1.4.1,<2.0.0)", "mkdocs-markdownextradata-plugin (>=0.1.7,<0.3.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mkdocs (>=1.1.2,<2.0.0)", "pyyaml (>=5.3.1,<7.0.0)", "typer[all] (>=0.6.1,<0.8.0)"]
test = ["anyio[trio] (>=3.2.1,<4.0.0)", "black (==22.10.0)", "coverage[toml] (>=6.5.0,<8.0)", "databases[sqlite] (>=0.3.2,<0.7.0)", "email-validator (>=1.1.1,<2.0.0)", "flask (>=1.1.2,<3.0.0)", "httpx (>=0.23.0,<0.24.0)", "isort (>=5.0.6,<6.0.0)", "mypy (==0.982)", "orjson (>=3.2.1,<4.0.0)", "passlib[bcrypt] (>=1.7.2,<2.0.0)", "peewee (>=3.13.3,<4.0.0)", "pytest (>=7.1.3,<8.0.0)", "python-jose[cryptography] (>=3.3.0,<4.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "pyyaml (>=5.3.1,<7.0.0)", "ruff (==0.0.138)", "sqlalchemy (>=1.3.18,<1.4.43)", "types-orjson (==3.6.2)", "types-ujson (==5.6.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)"]

[[package]]
name = "filelock"
version = "3.9.0"
description = "A platform independent file lock."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.12.7)", "sphinx-autodoc-typehints (>=1.19.5)", "sphinx (>=5.3)"]
testing = ["covdefaults (>=2.2.2)", "coverage (>=7.0.1)", "pytest-cov (>=4)", "pytest-timeout (>=2.1)", "pytest (>=7.2)"]

[[package]]
name = "flake8"
version = "6.0.0"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.8.1"

[package.dependencies]
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.10.0,<2.11.0"
pyflakes = ">=3.0.0,<3.1.0"

[[package]]
name = "flake8-black"
version = "0.3.6"
description = "flake8 plugin to call black as a code style validator"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
black = ">=22.1.0"
flake8 = ">=3"
tomli = {version = "*", markers = "python_version < \"3.11\""}

[package.extras]
develop = ["build", "twine"]

[[package]]
name = "fonttools"
version = "4.38.0"
description = "Tools to manipulate font files"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.3.3"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "dev"
optional = true
python-versions = ">=3.7"

[[package]]
name = "fsspec"
version = "2023.6.0"
description = "File-system specification"
category = "dev"
optional = true
python-versions = ">=3.8"

[package.dependencies]
aiohttp = {version = "<4.0.0a0 || >4.0.0a0,<4.0.0a1 || >4.0.0a1", optional = true, markers = "extra == \"http\""}
requests = {version = "*", optional = true, markers = "extra == \"http\""}

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
devel = ["pytest", "pytest-cov"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["requests", "aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "gitdb"
version = "4.0.10"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.31"
description = "GitPython is a Python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[[package]]
name = "h11"
version = "0.14.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "h5py"
version = "3.8.0"
description = "Read and write HDF5 files from Python"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "httptools"
version = "0.5.0"
description = "A collection of framework independent HTTP protocol utils."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
test = ["Cython (>=0.29.24,<0.30.0)"]

[[package]]
name = "identify"
version = "2.5.18"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "5.2.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.12.0"
description = "Read resources from Python packages"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[[package]]
name = "isort"
version = "5.12.0"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.extras]
colors = ["colorama (>=0.4.3)"]
requirements-deprecated-finder = ["pip-api", "pipreqs"]
pipfile-deprecated-finder = ["pip-shims (>=0.5.2)", "pipreqs", "requirementslib"]
plugins = ["setuptools"]

[[package]]
name = "joblib"
version = "1.2.0"
description = "Lightweight pipelining with Python functions"
category = "dev"
optional = true
python-versions = ">=3.7"

[[package]]
name = "jsonargparse"
version = "4.23.1"
description = "Implement minimal boilerplate CLIs derived from type hints and parse from command line, config files and environment variables."
category = "dev"
optional = true
python-versions = ">=3.6"

[package.dependencies]
docstring-parser = {version = ">=0.15", optional = true, markers = "extra == \"signatures\""}
jsonargparse = {version = "*", extras = ["typing-extensions"], optional = true, markers = "extra == \"signatures\""}
PyYAML = ">=3.13"
typeshed-client = {version = ">=2.1.0", optional = true, markers = "extra == \"signatures\""}
typing-extensions = {version = ">=3.10.0.0", optional = true, markers = "python_version < \"3.10\" and extra == \"typing-extensions\""}

[package.extras]
all = ["jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse"]
argcomplete = ["argcomplete (>=2.0.0)"]
coverage = ["jsonargparse", "pytest-cov (>=4.0.0)"]
dev = ["jsonargparse", "jsonargparse", "jsonargparse", "jsonargparse", "pre-commit (>=2.19.0)", "tox (>=3.25.0)", "build (>=0.10.0)"]
doc = ["Sphinx (>=1.7.9)", "sphinx-rtd-theme (>=1.2.2)", "autodocsumm (>=0.1.10)", "sphinx-autodoc-typehints (>=1.19.5)"]
fsspec = ["fsspec (>=0.8.4)"]
jsonnet = ["jsonnet-binary (>=0.17.0)", "jsonnet (>=0.13.0)"]
jsonschema = ["jsonschema (>=3.2.0)"]
maintainer = ["bump2version (>=0.5.11)", "twine (>=4.0.2)"]
mypy = ["jsonargparse", "mypy (>=0.701)"]
omegaconf = ["omegaconf (>=2.1.1)"]
reconplogger = ["reconplogger (>=4.4.0)"]
ruyaml = ["ruyaml (>=0.20.0)"]
signatures = ["jsonargparse", "docstring-parser (>=0.15)", "typeshed-client (>=2.1.0)"]
test = ["jsonargparse", "jsonargparse", "responses (>=0.12.0)", "types-requests (>=2.28.9)", "attrs (>=22.2.0)", "pydantic (>=1.10.7,<2.0.0)"]
test-no-urls = ["pytest (>=6.2.5)", "pytest-subtests (>=0.8.0)"]
types-pyyaml = ["types-PyYAML (>=6.0.11)"]
typing-extensions = ["typing-extensions (>=3.10.0.0)"]
urls = ["requests (>=2.18.4)"]

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "dev"
optional = true
python-versions = ">=3.7"

[[package]]
name = "lightning-flash"
version = "0.7.5"
description = "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes."
category = "dev"
optional = true
python-versions = ">=3.6"

[package.dependencies]
click = ">=7.1.2"
jsonargparse = {version = ">=3.17.0", extras = ["signatures"]}
numpy = "*"
packaging = "*"
pandas = ">=1.1.0"
pyDeprecate = "*"
pytorch-lightning = ">=1.3.6"
torch = ">=1.7.1"
torchmetrics = ">=0.5.0,<0.5.1 || >0.5.1"

[package.extras]
all = ["datasets (>=1.8)", "scikit-learn", "torchaudio", "segmentation-models-pytorch", "kornia (>=0.5.1)", "filelock", "librosa (>=0.8.1)", "torchmetrics (<0.8.0)", "pystiche (>=1.0.0,<2.0.0)", "datasets (>=1.16.1)", "sentence-transformers", "lightning-bolts (>=0.3.3)", "torchvision", "sentencepiece (>=0.1.95)", "pytorchvideo (==0.1.2)", "torchmetrics[text] (>=0.5.1)", "timm (>=0.4.5)", "pytorch-forecasting (>=0.9.0)", "transformers (>=4.5)", "Pillow (>=7.2)", "transformers (>=4.13.0)", "pytorch-tabular (==0.7.0)"]
audio = ["transformers (>=4.13.0)", "torchaudio", "librosa (>=0.8.1)", "datasets (>=1.16.1)"]
core = ["segmentation-models-pytorch", "sentencepiece (>=0.1.95)", "kornia (>=0.5.1)", "timm (>=0.4.5)", "pytorch-forecasting (>=0.9.0)", "torchmetrics[text] (>=0.5.1)", "sentence-transformers", "transformers (>=4.5)", "filelock", "Pillow (>=7.2)", "datasets (>=1.8)", "scikit-learn", "lightning-bolts (>=0.3.3)", "torchvision", "torchmetrics (<0.8.0)", "pystiche (>=1.0.0,<2.0.0)", "pytorch-tabular (==0.7.0)"]
dev = ["docutils (>=0.16)", "nbsphinx (>=0.8.5)", "ipython", "pandoc (>=1.0)", "datasets (>=1.8)", "scikit-learn", "pytest (>=5.0,<7.0)", "codecov (>=2.1)", "sphinxcontrib-mockautodoc", "pytest-forked", "torchaudio", "sphinx-autodoc-typehints (>=1.0)", "pytest-rerunfailures (>=10.0)", "torch-optimizer", "segmentation-models-pytorch", "sphinx-paramlinks (>=0.5.1)", "kornia (>=0.5.1)", "isort", "filelock", "pt-lightning-sphinx-theme", "librosa (>=0.8.1)", "torchmetrics (<0.8.0)", "jinja2 (>=3.0.0,<3.1.0)", "pystiche (>=1.0.0,<2.0.0)", "datasets (>=1.16.1)", "twine (==3.2)", "sphinx (>=4.0,<5.0)", "sentence-transformers", "pre-commit", "sphinxcontrib-fulltoc (>=1.0)", "lightning-bolts (>=0.3.3)", "torchvision", "sentencepiece (>=0.1.95)", "pytest-mock", "flake8", "coverage", "check-manifest", "sphinx-togglebutton (>=0.2)", "pytest-flake8", "pytorchvideo (==0.1.2)", "torchmetrics[text] (>=0.5.1)", "timm (>=0.4.5)", "pytorch-forecasting (>=0.9.0)", "sphinx-copybutton (>=0.3)", "transformers (>=4.5)", "Pillow (>=7.2)", "transformers (>=4.13.0)", "myst-parser (>=0.15)", "pytorch-tabular (==0.7.0)", "pytest-doctestplus (>=0.9.0)"]
docs = ["docutils (>=0.16)", "nbsphinx (>=0.8.5)", "sphinx (>=4.0,<5.0)", "sphinx-paramlinks (>=0.5.1)", "sphinx-copybutton (>=0.3)", "ipython", "pandoc (>=1.0)", "pt-lightning-sphinx-theme", "sphinxcontrib-fulltoc (>=1.0)", "sphinxcontrib-mockautodoc", "myst-parser (>=0.15)", "sphinx-togglebutton (>=0.2)", "sphinx-autodoc-typehints (>=1.0)", "jinja2 (>=3.0.0,<3.1.0)"]
graph = ["torch-scatter", "class-resolver (>=0.3.2)", "networkx", "torch-geometric (>=2.0.0)", "torch-sparse", "torch-cluster"]
image = ["segmentation-models-pytorch", "kornia (>=0.5.1)", "timm (>=0.4.5)", "Pillow (>=7.2)", "lightning-bolts (>=0.3.3)", "torchvision", "pystiche (>=1.0.0,<2.0.0)"]
image_extras = ["fastface", "pytorch-lightning (<1.5.0)", "effdet", "fiftyone", "matplotlib", "segmentation-models-pytorch", "kornia (>=0.5.1)", "fairscale", "learn2learn", "torchmetrics (<0.8.0)", "pystiche (>=1.0.0,<2.0.0)", "icevision (>=0.8)", "albumentations", "lightning-bolts (>=0.3.3)", "torchvision", "timm (>=0.4.5)", "vissl (>=0.1.5)", "Pillow (>=7.2)", "icedata", "classy-vision"]
image_extras_baal = ["segmentation-models-pytorch", "kornia (>=0.5.1)", "timm (>=0.4.5)", "Pillow (>=7.2)", "baal (>=1.3.2)", "lightning-bolts (>=0.3.3)", "torchvision", "pystiche (>=1.0.0,<2.0.0)"]
notebooks = ["jupyter-client", "jupyter", "nbconvert"]
pointcloud = ["torch (==1.7.1)", "open3d (==0.13)", "tensorboard", "torchvision"]
serve = ["pillow", "graphviz", "tqdm", "uvicorn[standard] (>=0.12.0)", "numpy", "cytoolz", "pydantic (>1.8.1)", "torchvision", "starlette (==0.14.2)", "aiofiles", "pyyaml", "jinja2 (>=3.0.0,<3.1.0)", "fastapi (>=0.65.2)"]
tabular = ["torchmetrics (<0.8.0)", "scikit-learn", "pytorch-forecasting (>=0.9.0)", "pytorch-tabular (==0.7.0)"]
test = ["pytest-flake8", "torch-optimizer", "twine (==3.2)", "isort", "pre-commit", "pytest (>=5.0,<7.0)", "check-manifest", "scikit-learn", "codecov (>=2.1)", "pytest-mock", "pytest-forked", "flake8", "coverage", "pytest-rerunfailures (>=10.0)", "pytest-doctestplus (>=0.9.0)"]
text = ["torchmetrics[text] (>=0.5.1)", "sentence-transformers", "datasets (>=1.8)", "transformers (>=4.5)", "filelock", "sentencepiece (>=0.1.95)"]
video = ["kornia (>=0.5.1)", "pytorchvideo (==0.1.2)", "torchvision", "Pillow (>=7.2)"]
video_extras = ["pytorchvideo (==0.1.2)", "kornia (>=0.5.1)", "Pillow (>=7.2)", "torchvision", "fiftyone"]
vision = ["segmentation-models-pytorch", "pytorchvideo (==0.1.2)", "kornia (>=0.5.1)", "timm (>=0.4.5)", "Pillow (>=7.2)", "lightning-bolts (>=0.3.3)", "torchvision", "pystiche (>=1.0.0,<2.0.0)"]

[[package]]
name = "lightning-utilities"
version = "0.7.1"
description = "PyTorch Lightning Sample project."
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=17.1"
typing-extensions = "*"

[package.extras]
cli = ["fire"]
docs = ["sphinx (>=4.0,<5.0)"]
test = ["coverage (==6.5.0)"]
typing = ["mypy (>=1.0.0)"]

[[package]]
name = "matplotlib"
version = "3.7.0"
description = "Python plotting package"
category = "dev"
optional = true
python-versions = ">=3.8"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
importlib-resources = {version = ">=3.2.0", markers = "python_version < \"3.10\""}
kiwisolver = ">=1.0.1"
numpy = ">=1.20"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.3.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=7"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mlflow-skinny"
version = "2.1.1"
description = "MLflow: A Platform for ML Development and Productionization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0,<9"
cloudpickle = "<3"
databricks-cli = ">=0.8.7,<1"
entrypoints = "<1"
gitpython = ">=2.1.0,<4"
importlib-metadata = ">=3.7.0,<4.7.0 || >4.7.0,<6"
packaging = "<23"
protobuf = ">=3.12.0,<5"
pytz = "<2023"
pyyaml = ">=5.1,<7"
requests = ">=2.17.3,<3"
sqlparse = ">=0.4.0,<1"

[package.extras]
aliyun-oss = ["aliyunstoreplugin"]
extras = ["azureml-core (>=1.2.0)", "boto3", "google-cloud-storage (>=1.30.0)", "kubernetes", "mlserver-mlflow (>=1.2.0.dev13)", "mlserver (>=1.2.0.dev13)", "prometheus-flask-exporter", "pyarrow", "pysftp", "requests-auth-aws-sigv4", "scikit-learn", "virtualenv"]
sqlserver = ["mlflow-dbstore"]

[[package]]
name = "multidict"
version = "6.0.4"
description = "multidict implementation"
category = "dev"
optional = true
python-versions = ">=3.7"

[[package]]
name = "mypy"
version = "0.991"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
mypy-extensions = ">=0.4.3"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = ">=3.10"

[package.extras]
dmypy = ["psutil (>=4.0)"]
install-types = ["pip"]
python2 = ["typed-ast (>=1.4.0,<2)"]
reports = ["lxml"]

[[package]]
name = "mypy-extensions"
version = "1.0.0"
description = "Type system extensions for programs checked with the mypy type checker."
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "numpy"
version = "1.24.2"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "nvidia-cublas-cu11"
version = "11.10.3.66"
description = "CUBLAS native runtime libraries"
category = "dev"
optional = true
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-nvrtc-cu11"
version = "11.7.99"
description = "NVRTC native runtime libraries"
category = "dev"
optional = true
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-runtime-cu11"
version = "11.7.99"
description = "CUDA Runtime native Libraries"
category = "dev"
optional = true
python-versions = ">=3"

[[package]]
name = "nvidia-cudnn-cu11"
version = "8.5.0.96"
description = "cuDNN runtime libraries"
category = "dev"
optional = true
python-versions = ">=3"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "packaging"
version = "22.0"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "1.5.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.3", markers = "python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
    {version = ">=1.23.2", markers = "python_version >= \"3.11\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "pathspec"
version = "0.11.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pillow"
version = "9.4.0"
description = "Python Imaging Library (Fork)"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "platformdirs"
version = "3.0.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.12.7)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.22,!=1.23.4)", "sphinx (>=6.1.3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.2.2)", "pytest-cov (>=4)", "pytest-mock (>=3.10)", "pytest (>=7.2.1)"]

[[package]]
name = "plotly"
version = "5.15.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = "*"
tenacity = ">=6.2.0"

[[package]]
name = "pre-commit"
version = "3.1.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
virtualenv = ">=20.10.0"

[[package]]
name = "protobuf"
version = "4.22.0"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pycodestyle"
version = "2.10.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pydantic"
version = "1.10.5"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.2.0"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pydeprecate"
version = "0.3.2"
description = "Deprecation tooling"
category = "dev"
optional = true
python-versions = ">=3.6"

[[package]]
name = "pyflakes"
version = "3.0.1"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyjwt"
version = "2.6.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.4.0)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "pre-commit"]
docs = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "dev"
optional = true
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-dotenv"
version = "1.0.0"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pytorch-lightning"
version = "1.9.3"
description = "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate."
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
fsspec = {version = ">2021.06.0", extras = ["http"]}
lightning-utilities = ">=0.6.0.post0"
numpy = ">=1.17.2"
packaging = ">=17.1"
PyYAML = ">=5.4"
torch = ">=1.10.0"
torchmetrics = ">=0.7.0"
tqdm = ">=4.57.0"
typing-extensions = ">=4.0.0"

[package.extras]
all = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.18.0)", "rich (>=10.14.0,!=10.15.0.a)", "tensorboardX (>=2.2)", "colossalai (>=0.2.0)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)", "horovod (>=0.21.2,!=0.24.0)", "torchvision (>=0.11.1)", "gym[classic_control] (>=0.17.0)", "ipython[all] (<8.7.1)", "hivemind (==1.1.5)"]
colossalai = ["colossalai (>=0.2.0)"]
deepspeed = ["deepspeed (>=0.6.0)"]
dev = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.18.0)", "rich (>=10.14.0,!=10.15.0.a)", "tensorboardX (>=2.2)", "colossalai (>=0.2.0)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)", "horovod (>=0.21.2,!=0.24.0)", "torchvision (>=0.11.1)", "gym[classic_control] (>=0.17.0)", "ipython[all] (<8.7.1)", "coverage (==6.5.0)", "codecov (==2.1.12)", "pytest (==7.2.0)", "pytest-cov (==4.0.0)", "pytest-forked (==1.4.0)", "pytest-rerunfailures (==10.3)", "pre-commit (==2.20.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnxruntime (<1.14.0)", "psutil (<5.9.5)", "pandas (>1.0)", "fastapi (<0.87.0)", "uvicorn (<0.19.1)", "tensorboard (>=2.9.1)", "protobuf (<=3.20.1)", "hivemind (==1.1.5)"]
examples = ["torchvision (>=0.11.1)", "gym[classic_control] (>=0.17.0)", "ipython[all] (<8.7.1)"]
extra = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.18.0)", "rich (>=10.14.0,!=10.15.0.a)", "tensorboardX (>=2.2)"]
fairscale = ["fairscale (>=0.4.5)"]
hivemind = ["hivemind (==1.1.5)"]
horovod = ["horovod (>=0.21.2,!=0.24.0)"]
strategies = ["colossalai (>=0.2.0)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)", "horovod (>=0.21.2,!=0.24.0)", "hivemind (==1.1.5)"]
test = ["coverage (==6.5.0)", "codecov (==2.1.12)", "pytest (==7.2.0)", "pytest-cov (==4.0.0)", "pytest-forked (==1.4.0)", "pytest-rerunfailures (==10.3)", "pre-commit (==2.20.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnxruntime (<1.14.0)", "psutil (<5.9.5)", "pandas (>1.0)", "fastapi (<0.87.0)", "uvicorn (<0.19.1)", "tensorboard (>=2.9.1)", "protobuf (<=3.20.1)"]

[[package]]
name = "pytz"
version = "2022.7.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.28.2"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "scikit-learn"
version = "1.2.1"
description = "A set of python modules for machine learning and data mining"
category = "dev"
optional = true
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.1.1"
numpy = ">=1.17.3"
scipy = ">=1.3.2"
threadpoolctl = ">=2.0.0"

[package.extras]
benchmark = ["matplotlib (>=3.1.3)", "pandas (>=1.0.5)", "memory-profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "memory-profiler (>=0.57.0)", "sphinx (>=4.0.1)", "sphinx-gallery (>=0.7.0)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.3.0)", "sphinxext-opengraph (>=0.4.2)", "plotly (>=5.10.0)"]
examples = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.10.0)"]
tests = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "pytest (>=5.3.1)", "pytest-cov (>=2.9.0)", "flake8 (>=3.8.2)", "black (>=22.3.0)", "mypy (>=0.961)", "pyamg (>=4.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]

[[package]]
name = "scipy"
version = "1.9.3"
description = "Fundamental algorithms for scientific computing in Python"
category = "dev"
optional = true
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.18.5,<1.26.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-panels (>=0.5.2)", "matplotlib (>2)", "numpydoc", "sphinx-tabs"]
dev = ["mypy", "typing-extensions", "pycodestyle", "flake8"]

[[package]]
name = "setuptools-scm"
version = "7.1.0"
description = "the blessed package to manage your versions by scm tags"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}
typing-extensions = "*"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "sniffio"
version = "1.3.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "sqlparse"
version = "0.4.3"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "starlette"
version = "0.22.0"
description = "The little ASGI library that shines."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.4.0,<5"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
full = ["httpx (>=0.22.0)", "itsdangerous", "jinja2", "python-multipart", "pyyaml"]

[[package]]
name = "structlog"
version = "21.5.0"
description = "Structured Logging for Python"
category = "dev"
optional = true
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "rich", "cogapp", "tomli", "coverage", "freezegun (>=0.2.8)", "pretend", "pytest-asyncio", "pytest (>=6.0)", "simplejson", "furo", "sphinx", "sphinx-notfound-page", "sphinxcontrib-mermaid", "twisted"]
docs = ["furo", "sphinx", "sphinx-notfound-page", "sphinxcontrib-mermaid", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest-asyncio", "pytest (>=6.0)", "simplejson"]

[[package]]
name = "tabulate"
version = "0.9.0"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tenacity"
version = "8.2.2"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "dev"
optional = true
python-versions = ">=3.6"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "1.13.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "dev"
optional = true
python-versions = ">=3.7.0"

[package.dependencies]
nvidia-cublas-cu11 = {version = "11.10.3.66", markers = "platform_system == \"Linux\""}
nvidia-cuda-nvrtc-cu11 = {version = "11.7.99", markers = "platform_system == \"Linux\""}
nvidia-cuda-runtime-cu11 = {version = "11.7.99", markers = "platform_system == \"Linux\""}
nvidia-cudnn-cu11 = {version = "8.5.0.96", markers = "platform_system == \"Linux\""}
typing-extensions = "*"

[package.extras]
opt-einsum = ["opt-einsum (>=3.3)"]

[[package]]
name = "torchmetrics"
version = "0.9.3"
description = "PyTorch native Metrics"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.2"
packaging = "*"
torch = ">=1.3.1"

[package.extras]
test = ["pycocotools", "codecov (>=2.1)", "check-manifest", "torch-complex", "scikit-learn (>1.0,<1.1.1)", "cloudpickle (>=1.3)", "mir-eval (>=0.6)", "pytest-cov (>2.10)", "pytest-timeout", "scikit-image (>0.17.1)", "pytest (>=6.0.0,<7.0.0)", "pypesq", "transformers (>=4.0)", "pre-commit (>=1.0)", "fire", "bert-score (==0.3.10)", "pytorch-msssim", "psutil", "coverage (>5.2)", "huggingface-hub (<0.7)", "pytest-doctestplus (>=0.9.0)", "requests", "rouge-score (==0.0.4)", "jiwer (>=2.3.0)", "twine (>=3.2)", "sacrebleu (>=2.0.0)", "fast-bss-eval (>=0.1.0)", "phmdoctest (>=1.1.1)", "mypy (>=0.790)"]
all = ["pystoi", "pycocotools", "torchvision (>=0.8)", "sphinx (>=4.0,<5.0)", "sphinxcontrib-fulltoc (>=1.0)", "sphinxcontrib-mockautodoc", "sphinx-autodoc-typehints (>=1.0)", "sphinx-copybutton (>=0.3)", "docutils (>=0.16)", "pandoc (>=1.0)", "nbsphinx (>=0.8)", "sphinx-togglebutton (>=0.2)", "sphinx-paramlinks (>=0.5.1)", "myst-parser", "lpips", "torch-fidelity", "scipy", "torchvision", "pytorch-lightning (>=1.5)", "codecov (>=2.1)", "check-manifest", "torch-complex", "scikit-learn (>1.0,<1.1.1)", "cloudpickle (>=1.3)", "mir-eval (>=0.6)", "pytest-cov (>2.10)", "pytest-timeout", "scikit-image (>0.17.1)", "pytest (>=6.0.0,<7.0.0)", "pypesq", "transformers (>=4.0)", "pre-commit (>=1.0)", "fire", "bert-score (==0.3.10)", "pytorch-msssim", "psutil", "coverage (>5.2)", "huggingface-hub (<0.7)", "pytest-doctestplus (>=0.9.0)", "requests", "rouge-score (==0.0.4)", "jiwer (>=2.3.0)", "twine (>=3.2)", "sacrebleu (>=2.0.0)", "fast-bss-eval (>=0.1.0)", "phmdoctest (>=1.1.1)", "mypy (>=0.790)", "nltk (>=3.6)", "regex (>=2021.9.24)", "tqdm (>=4.41.0)"]
audio = ["pystoi"]
detection = ["pycocotools", "torchvision (>=0.8)"]
docs = ["sphinx (>=4.0,<5.0)", "sphinxcontrib-fulltoc (>=1.0)", "sphinxcontrib-mockautodoc", "sphinx-autodoc-typehints (>=1.0)", "sphinx-copybutton (>=0.3)", "docutils (>=0.16)", "pandoc (>=1.0)", "nbsphinx (>=0.8)", "sphinx-togglebutton (>=0.2)", "sphinx-paramlinks (>=0.5.1)", "myst-parser"]
image = ["lpips", "torch-fidelity", "scipy", "torchvision"]
integrate = ["pytorch-lightning (>=1.5)"]
text = ["nltk (>=3.6)", "regex (>=2021.9.24)", "tqdm (>=4.41.0)"]

[[package]]
name = "torchvision"
version = "0.14.1"
description = "image and video datasets and models for torch deep learning"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >=8.4.0"
requests = "*"
torch = "1.13.1"
typing-extensions = "*"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "dev"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "typeshed-client"
version = "2.2.0"
description = "A library for accessing stubs in typeshed."
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
importlib-resources = ">=1.4.0"

[[package]]
name = "typing-extensions"
version = "4.5.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.14"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "uvicorn"
version = "0.20.0"
description = "The lightning-fast ASGI server."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=7.0"
colorama = {version = ">=0.4", optional = true, markers = "sys_platform == \"win32\" and extra == \"standard\""}
h11 = ">=0.8"
httptools = {version = ">=0.5.0", optional = true, markers = "extra == \"standard\""}
python-dotenv = {version = ">=0.13", optional = true, markers = "extra == \"standard\""}
pyyaml = {version = ">=5.1", optional = true, markers = "extra == \"standard\""}
uvloop = {version = ">=0.14.0,<0.15.0 || >0.15.0,<0.15.1 || >0.15.1", optional = true, markers = "sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\" and extra == \"standard\""}
watchfiles = {version = ">=0.13", optional = true, markers = "extra == \"standard\""}
websockets = {version = ">=10.4", optional = true, markers = "extra == \"standard\""}

[package.extras]
standard = ["colorama (>=0.4)", "httptools (>=0.5.0)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[[package]]
name = "uvloop"
version = "0.17.0"
description = "Fast implementation of asyncio event loop on top of libuv"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["Cython (>=0.29.32,<0.30.0)", "pytest (>=3.6.0)", "Sphinx (>=4.1.2,<4.2.0)", "sphinxcontrib-asyncio (>=0.3.0,<0.4.0)", "sphinx-rtd-theme (>=0.5.2,<0.6.0)", "flake8 (>=3.9.2,<3.10.0)", "psutil", "pycodestyle (>=2.7.0,<2.8.0)", "pyOpenSSL (>=22.0.0,<22.1.0)", "mypy (>=0.800)", "aiohttp"]
docs = ["Sphinx (>=4.1.2,<4.2.0)", "sphinxcontrib-asyncio (>=0.3.0,<0.4.0)", "sphinx-rtd-theme (>=0.5.2,<0.6.0)"]
test = ["flake8 (>=3.9.2,<3.10.0)", "psutil", "pycodestyle (>=2.7.0,<2.8.0)", "pyOpenSSL (>=22.0.0,<22.1.0)", "mypy (>=0.800)", "Cython (>=0.29.32,<0.30.0)", "aiohttp"]

[[package]]
name = "virtualenv"
version = "20.19.0"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
distlib = ">=0.3.6,<1"
filelock = ">=3.4.1,<4"
platformdirs = ">=2.4,<4"

[package.extras]
docs = ["furo (>=2022.12.7)", "proselint (>=0.13)", "sphinx-argparse (>=0.4)", "sphinx (>=6.1.3)", "sphinxcontrib-towncrier (>=0.2.1a0)", "towncrier (>=22.12)"]
test = ["covdefaults (>=2.2.2)", "coverage-enable-subprocess (>=1)", "coverage (>=7.1)", "flaky (>=3.7)", "packaging (>=23)", "pytest-env (>=0.8.1)", "pytest-freezegun (>=0.4.2)", "pytest-mock (>=3.10)", "pytest-randomly (>=3.12)", "pytest-timeout (>=2.1)", "pytest (>=7.2.1)"]

[[package]]
name = "watchfiles"
version = "0.18.1"
description = "Simple, modern and high performance file watching and code reload in python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.0.0"

[[package]]
name = "websockets"
version = "10.4"
description = "An implementation of the WebSocket Protocol (RFC 6455 & 7692)"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "yarl"
version = "1.8.2"
description = "Yet another URL library"
category = "dev"
optional = true
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zipp"
version = "3.15.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[extras]
full = []

[metadata]
lock-version = "1.1"
python-versions = "^3.9"
content-hash = "c4bcbf5dfbf105c0e8be12a1dccfc5dc07bba0e5487b12bb6d513e42593d71c7"

[metadata.files]
aiohttp = []
aiosignal = []
anyio = []
async-timeout = []
attrs = []
baal = []
black = []
certifi = []
cfgv = []
charset-normalizer = []
click = []
cloudpickle = []
colorama = []
contourpy = []
cycler = []
databricks-cli = []
distlib = []
docstring-parser = []
entrypoints = []
fastapi = []
filelock = []
flake8 = []
flake8-black = []
fonttools = []
frozenlist = []
fsspec = []
gitdb = []
gitpython = []
h11 = []
h5py = []
httptools = []
identify = []
idna = []
importlib-metadata = []
importlib-resources = []
isort = []
joblib = []
jsonargparse = []
kiwisolver = []
lightning-flash = []
lightning-utilities = []
matplotlib = []
mccabe = []
mlflow-skinny = []
multidict = []
mypy = []
mypy-extensions = []
nodeenv = []
numpy = []
nvidia-cublas-cu11 = []
nvidia-cuda-nvrtc-cu11 = []
nvidia-cuda-runtime-cu11 = []
nvidia-cudnn-cu11 = []
oauthlib = []
packaging = []
pandas = []
pathspec = []
pillow = []
platformdirs = []
plotly = []
pre-commit = []
protobuf = []
pycodestyle = []
pydantic = []
pydeprecate = []
pyflakes = []
pyjwt = []
pyparsing = []
python-dateutil = []
python-dotenv = []
pytorch-lightning = []
pytz = []
pyyaml = []
requests = []
scikit-learn = []
scipy = []
setuptools-scm = []
six = []
smmap = []
sniffio = []
sqlparse = []
starlette = []
structlog = []
tabulate = []
tenacity = []
threadpoolctl = []
tomli = []
torch = []
torchmetrics = []
torchvision = []
tqdm = []
typeshed-client = []
typing-extensions = []
urllib3 = []
uvicorn = []
uvloop = []
virtualenv = []
watchfiles = []
websockets = []
yarl = []
zipp = []
